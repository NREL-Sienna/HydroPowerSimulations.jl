var documenterSearchIndex = {"docs":
[{"location":"quick_start_guide/#Quick-Start-Guide","page":"Quick Start Guide","title":"Quick Start Guide","text":"","category":"section"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Julia: If this is your first time using Julia visit our Introduction to Julia and the official Getting started with Julia.\nPackage Installation: If you want to install packages check the Package Manager instructions, or you can refer to the PowerSimulations installation instructions.\nPowerSystems: PowerSystems.jl manages the data and is a fundamental dependency of PowerSimulations.jl. Check the PowerSystems.jl Basics Tutorial and PowerSystems.jl documentation to understand how the inputs to the models are organized.\nDataset Library: If you don't have a data set to start using HydroPowerSimulations.jl check the test systems provided in PowerSystemCaseBuilder.jl\nPowerSimulations: PowerSimulations.jl  provides the basic models for","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"tip: Tip\nIf you need to develop a dataset for a simulation check the PowerSystems.jl Tutorials on how to parse data and attach time series","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Tutorial: If you are eager to run your first simulation visit the Solve a Day Ahead Market Scheduling Problem using PowerSimulations.jl tutorials. Visit our formulations page for the available hydro generation models.","category":"page"},{"location":"tutorials/single_stage_model/#op_problem","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"note: Note\nHydroPowerSimulations.jl is an extension library of PowerSimulations.jl for modeling hydro units. Users are encouraged to review the single-step tutorial in PowerSimulations.jl before this tutorial.","category":"page"},{"location":"tutorials/single_stage_model/#Load-packages","page":"Operation Problem with HydroPowerSimulations.jl","title":"Load packages","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"using PowerSystems\nusing PowerSimulations\nusing HydroPowerSimulations\nusing PowerSystemCaseBuilder\nusing HiGHS # solver","category":"page"},{"location":"tutorials/single_stage_model/#Data","page":"Operation Problem with HydroPowerSimulations.jl","title":"Data","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"note: Note\nPowerSystemCaseBuilder.jl is a helper library that makes it easier to reproduce examples in the documentation and tutorials. Normally you would pass your local files to create the system data instead of calling the function build_system. For more details visit PowerSystemCaseBuilder README","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"sys = build_system(PSITestSystems, \"c_sys5_hy\")","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"With a single PowerSystems.HydroDispatch:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"hy = only(get_components(HydroDispatch, sys))","category":"page"},{"location":"tutorials/single_stage_model/#Decision-Model","page":"Operation Problem with HydroPowerSimulations.jl","title":"Decision Model","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"Setting up the formulations based on PowerSimulations.jl:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"template = ProblemTemplate(PTDFPowerModel)\nset_device_model!(template, ThermalStandard, ThermalBasicDispatch)\nset_device_model!(template, PowerLoad, StaticPowerLoad)\nset_device_model!(template, Line, StaticBranch)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"but, now we also include the hydro using HydroDispatchRunOfRiver:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"set_device_model!(template, HydroDispatch, HydroDispatchRunOfRiver)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"With the template properly set-up, we construct, build and solve the optimization problem:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"model = DecisionModel(template, sys; optimizer = HiGHS.Optimizer)\nbuild!(model; output_dir = mktempdir())\nsolve!(model)","category":"page"},{"location":"tutorials/single_stage_model/#Exploring-Results","page":"Operation Problem with HydroPowerSimulations.jl","title":"Exploring Results","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"Results can be explored using:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"res = OptimizationProblemResults(model)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"Use read_variable to read in the dispatch variable results for the hydro:","category":"page"},{"location":"tutorials/single_stage_model/","page":"Operation Problem with HydroPowerSimulations.jl","title":"Operation Problem with HydroPowerSimulations.jl","text":"var = read_variable(res, \"ActivePowerVariable__HydroDispatch\")","category":"page"},{"location":"formulation/#HydroPowerSimulations-Formulations","page":"Formulation Library","title":"HydroPowerSimulations Formulations","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Hydro generation formulations define the optimization models that describe hydro units mathematical model in different operational settings, such as economic dispatch and unit commitment.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"note: Note\nThe use of reactive power variables and constraints will depend on the network model used, i.e., whether it uses (or does not use) reactive power. If the network model is purely active power-based,  reactive power variables and related constraints are not created.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"note: Note\nReserve variables for services are not included in the formulation, albeit their inclusion change the variables, expressions, constraints and objective functions created. A detailed description of the implications in the optimization models is described in the Service formulation in the PowerSimulations documentation.","category":"page"},{"location":"formulation/#Table-of-Contents","page":"Formulation Library","title":"Table of Contents","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroDispatchRunOfRiver\nHydroDispatchReservoirBudget\nHydroDispatchReservoirStorage\nHydroDispatchPumpedStorage\nHydroCommitmentRunOfRiver\nHydroCommitmentReservoirBudget\nHydroCommitmentReservoirStorage","category":"page"},{"location":"formulation/#HydroDispatchRunOfRiver","page":"Formulation Library","title":"HydroDispatchRunOfRiver","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroDispatchRunOfRiver","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroDispatchRunOfRiver-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroDispatchRunOfRiver","text":"Formulation type to add injection variables constrained by a maximum injection time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the max_active_power timeseries parameter to limit the available active power at each time-step. If the timeseries parameter is not included, the power is limited by P^textthmax.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  P^texthymin le p^texthy_t le textActivePowerTimeSeriesParameter_t quad forall tin 1 dots T \n  Q^texthymin le q^texthy_t le Q^texthymax quad forall tin 1 dots T \nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroDispatchReservoirBudget","page":"Formulation Library","title":"HydroDispatchReservoirBudget","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroDispatchReservoirBudget","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroDispatchReservoirBudget-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroDispatchReservoirBudget","text":"Formulation type to add injection variables constrained by total energy production budget defined with a time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the hydro_budget timeseries parameter to limit the active power usage throughout all the time steps.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  P^texthymin le p^texthy_t le P^texthymax quad forall tin 1 dots T \n  Q^texthymin le q^texthy_t le Q^texthymax quad forall tin 1 dots T \n sum_t=1^T p^texthy_t le sum_t=1^T textEnergyBudgetTimeSeriesParameter_t\nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroDispatchReservoirStorage","page":"Formulation Library","title":"HydroDispatchReservoirStorage","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroDispatchReservoirStorage","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroDispatchReservoirStorage-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroDispatchReservoirStorage","text":"Formulation type to constrain hydropower production with a representation of the energy storage capacity and water inflow time series of a reservoir for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy\nPowerSimulations.EnergyVariable:\nBounds: 00 E^textmax\nSymbol: e\nWaterSpillageVariable:\nBounds: [0.0, ]\nSymbol: s\nHydroEnergySurplusVariable:\nBounds: -E^textmax 00\nSymbol: e^textsurplus\nHydroEnergyShortageVariable:\nBounds: 00 E^textmax\nSymbol: e^textshortage","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max\nE^textmax = PowerSystems.get_storage_capacity(device)","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Initial Conditions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The PowerSimulations.InitialEnergyLevel: e_0 is used as the initial condition for the energy level of the reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the storage_target timeseries parameter to set a storage target of the reservoir and the inflow timeseries parameter to obtain the inflow to the reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression. This model has shortage costs for the energy target that are also added to the objective function. In case of no shortage cost are specified, the model will turn-off the shortage variable to avoid infeasible/unbounded problems.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  P^texthymin le p^texthy_t le P^texthymax quad forall tin 1 dots T \n  Q^texthymin le q^texthy_t le Q^texthymax quad forall tin 1 dots T \n e_t = e_t-1 - Delta T (p^texthy_t - s_t) + textInflowTimeSeriesParameter_t quad forall tin 1 dots T \n e_t + e^textshortage + e^textsurplus = textEnergyTargetTimeSeriesParameter_t quad forall tin 1 dots T\nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroDispatchPumpedStorage","page":"Formulation Library","title":"HydroDispatchPumpedStorage","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"This formulation is not available with reactive power. This formulation must be used with PowerSystems.HydroPumpedStorage component.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroDispatchPumpedStorage","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroDispatchPumpedStorage-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroDispatchPumpedStorage","text":"Formulation type to constrain energy production from pumped storage with a representation of the energy storage capacity of upper and lower reservoirs and water inflow time series of upper reservoir and outflow time series of lower reservoir for PowerSystems.HydroPumpedStorage\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerOutVariable:\nBounds: [0.0, ]\nSymbol: p^texthyout\nPowerSimulations.ActivePowerInVariable:\nBounds: [0.0, ]\nSymbol: p^texthyin\nHydroEnergyVariableUp:\nBounds: 00 E^textmaxup\nSymbol: e^textup\nHydroEnergyVariableDown:\nBounds: 00 E^textmaxdn\nSymbol: e^textdn\nWaterSpillageVariable:\nBounds: [0.0, ]\nSymbol: s","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"If the attribute reservation is set to true, the following variable is created:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ReservationVariable:\nBounds: 01\nSymbol: ss^texthy","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"If reservation is set to false (default), then the hydro pumped storage is allowed to pump and discharge simultaneously at each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^textoutmin = PowerSystems.get_active_power_limits(device).min\nP^textoutmax = PowerSystems.get_active_power_limits(device).max\nP^textinmin = PowerSystems.get_active_power_limits_pump(device).min\nP^textinmax = PowerSystems.get_active_power_limits_pump(device).max\nE^textmaxup = PowerSystems.get_storage_capacity(device).up\nE^textmaxdn = PowerSystems.get_storage_capacity(device).down\neta^textpump = PowerSystems.get_pump_efficiency(device)","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Initial Conditions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The InitialHydroEnergyLevelUp: e_0^textup is used as the initial condition for the energy level of the upper reservoir, while InitialHydroEnergyLevelDown: e_0^textdn is used as the initial condition for the energy level of the lower reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the inflow and outflow timeseries to obtain the inflow and outflow to the reservoir. inflow corresponds to the inflow into the upper (up) reservoir, while outflow corresponds to the outflow from the lower (down) reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds (p^texthyout - p^texthyin) to the PowerSimulations.ActivePowerBalance to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"If reservation = true, the limits are given by:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n ss_t^texthy P^textoutmin le p^texthyout_t le ss_t^texthy P^textoutmax quad forall tin 1 dots T \n (1-ss_t^texthy) P^textinmin le p^texthyin_t le (1 - ss_t^texthy) P^textinmax quad forall tin 1 dots T \nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"If reservation = false, then:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n P^textoutmin le p^texthyout_t le P^textoutmax quad forall tin 1 dots T \n P^textinmin le p^texthyin_t le  P^textinmax quad forall tin 1 dots T \nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The remaining constraints are:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\ne_t^textup = e_t-1^textup + left (p_t^texthyin - fracp_t^texthyout + s_teta^textpump right) Delta T + textInflowTimeSeriesParameter_t quad forall tin 1 dots T \ne_t^textdn = e_t-1^textdn + left (p_t^texthyout + s_t - fracp_t^texthyineta^textpump right) Delta T - textOutflowTimeSeriesParameter_t quad forall tin 1 dots T  \nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroCommitmentRunOfRiver","page":"Formulation Library","title":"HydroCommitmentRunOfRiver","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroCommitmentRunOfRiver","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroCommitmentRunOfRiver-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroCommitmentRunOfRiver","text":"Formulation type to add commitment and injection variables constrained by a maximum injection time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy\nPowerSimulations.OnVariable:\nBounds: 0 1\nSymbol: u^texthy","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the max_active_power timeseries parameter to limit the available active power at each time-step. If the timeseries parameter is not included, the power is limited by P^textthmax.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  u_t^texthy P^texthymin le p^texthy_t le u_t^texthy textActivePowerTimeSeriesParameter_t quad forall tin 1 dots T \n u_t^texthy Q^texthymin le q^texthy_t le u_t^texthy Q^texthymax quad forall tin 1 dots T \nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroCommitmentReservoirBudget","page":"Formulation Library","title":"HydroCommitmentReservoirBudget","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroCommitmentReservoirBudget","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroCommitmentReservoirBudget-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroCommitmentReservoirBudget","text":"Formulation type to add commitment and injection variables constrained by total energy production budget defined with a time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy\nPowerSimulations.OnVariable:\nBounds: 0 1\nSymbol: u^texthy","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the hydro_budget timeseries parameter to limit the active power usage throughout all the time steps.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  u_t^texthy P^texthymin le p^texthy_t le u_t^texthy P^texthymax quad forall tin 1 dots T \n  u_t^texthy Q^texthymin le q^texthy_t le u_t^texthy Q^texthymax quad forall tin 1 dots T \n sum_t=1^T p^texthy_t le sum_t=1^T textEnergyBudgetTimeSeriesParameter_t\nendalign*","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"","category":"page"},{"location":"formulation/#HydroDispatchReservoirStorage-2","page":"Formulation Library","title":"HydroDispatchReservoirStorage","text":"","category":"section"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroCommitmentReservoirStorage","category":"page"},{"location":"formulation/#HydroPowerSimulations.HydroCommitmentReservoirStorage-formulation","page":"Formulation Library","title":"HydroPowerSimulations.HydroCommitmentReservoirStorage","text":"Formulation type to constrain hydropower production with unit commitment variables and a representation of the energy storage capacity and water inflow time series of a reservoir for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"PowerSimulations.ActivePowerVariable:\nBounds: [0.0, ]\nSymbol: p^texthy\nPowerSimulations.ReactivePowerVariable:\nBounds: [0.0, ]\nSymbol: q^texthy\nPowerSimulations.OnVariable:\nBounds: 0 1\nSymbol: u^texthy\nPowerSimulations.EnergyVariable:\nBounds: 00 E^textmax\nSymbol: e\nWaterSpillageVariable:\nBounds: [0.0, ]\nSymbol: s\nHydroEnergySurplusVariable:\nBounds: -E^textmax 00\nSymbol: e^textsurplus\nHydroEnergyShortageVariable:\nBounds: 00 E^textmax\nSymbol: e^textshortage","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Auxiliary Variables:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"HydroEnergyOutput:\nSymbol: E^texthyout","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The HydroEnergyOutput is computed as the energy used at each time step from the hydro, computed simply as E^texthyout cdot Delta T, where Delta T is the duration (in hours) of each time step.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Static Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"P^texthymin = PowerSystems.get_active_power_limits(device).min\nP^texthymax = PowerSystems.get_active_power_limits(device).max\nQ^texthymin = PowerSystems.get_reactive_power_limits(device).min\nQ^texthymax = PowerSystems.get_reactive_power_limits(device).max\nE^textmax = PowerSystems.get_storage_capacity(device)","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Initial Conditions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"The PowerSimulations.InitialEnergyLevel: e_0 is used as the initial condition for the energy level of the reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Time Series Parameters:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Uses the storage_target timeseries parameter to set a storage target of the reservoir and the inflow timeseries parameter to obtain the inflow to the reservoir.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Objective:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Add a cost to the objective function depending on the defined cost structure of the hydro unit by adding it to its ProductionCostExpression. This model has shortage costs for the energy target that are also added to the objective function. In case of no shortage cost are specified, the model will turn-off the shortage variable to avoid infeasible/unbounded problems.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Expressions:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Adds p^texthy to the PowerSimulations.ActivePowerBalance expression and q^texthy to the PowerSimulations.ReactivePowerBalance, to be used in the supply-balance constraint depending on the network model used.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"Constraints:","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"For each hydro unit creates the range constraints for its active and reactive power depending on its static parameters.","category":"page"},{"location":"formulation/","page":"Formulation Library","title":"Formulation Library","text":"beginalign*\n  u_t^texthy P^texthymin le p^texthy_t le u_t^texthy P^texthymax quad forall tin 1 dots T \n  u_t^texthy Q^texthymin le q^texthy_t le u_t^texthy Q^texthymax quad forall tin 1 dots T \n e_t = e_t-1 - Delta T (p^texthy_t - s_t) + textInflowTimeSeriesParameter_t quad forall tin 1 dots T \n e_t + e^textshortage + e^textsurplus = textEnergyTargetTimeSeriesParameter_t quad forall tin 1 dots T\nendalign*","category":"page"},{"location":"api/internal/#Internal-API","page":"Internal API Reference","title":"Internal API","text":"","category":"section"},{"location":"api/internal/","page":"Internal API Reference","title":"Internal API Reference","text":"Modules = [HydroPowerSimulations]\nPublic = false\nPrivate = true","category":"page"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{<:PowerSimulations.PowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.ExpressionType, InfrastructureSystems.Optimization.VariableType}}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroGen, W<:HydroPowerSimulations.AbstractHydroDispatchFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add power variable limits constraints for abstract hydro dispatch formulations\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{<:PowerSimulations.PowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.ExpressionType, InfrastructureSystems.Optimization.VariableType}}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroGen, W<:HydroPowerSimulations.AbstractHydroUnitCommitment, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add power variable limits constraints for abstract hydro unit commitment formulations\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{<:PowerSimulations.PowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.ExpressionType, InfrastructureSystems.Optimization.VariableType}}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroPumpedStorage, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add output power variable limits constraints for abstract hydro dispatch formulations\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{EnergyCapacityDownConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroPumpedStorage, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add energy capacity down constraints for PowerSystems.HydroPumpedStorage\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{EnergyCapacityUpConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroPumpedStorage, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"This function defines the constraints for the water level (or state of charge) for the PowerSystems.HydroPumpedStorage.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{EnergyTargetConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroGen, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add energy target constraints for PowerSystems.HydroGen\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.ActivePowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.ExpressionType, InfrastructureSystems.Optimization.VariableType}}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroGen, W<:HydroDispatchRunOfRiver, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Time series constraints\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.ActivePowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.VariableType, var\"#s38\"} where var\"#s38\"<:PowerSimulations.RangeConstraintLBExpressions}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroGen, W<:HydroCommitmentRunOfRiver, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add semicontinuous range constraints for HydroCommitmentRunOfRiver formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.EnergyBalanceConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroEnergyReservoir, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"This function defines the constraints for the water level (or state of charge) for the PowerSystems.HydroEnergyReservoir.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{W}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.InputActivePowerVariableLimitsConstraint}, Type{<:Union{InfrastructureSystems.Optimization.ExpressionType, InfrastructureSystems.Optimization.VariableType}}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, W}, PowerSimulations.NetworkModel{X}}} where {V<:PowerSystems.HydroPumpedStorage, W<:HydroPowerSimulations.AbstractHydroReservoirFormulation, X<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.add_constraints!","text":"Add input power variable limits constraints for abstract hydro dispatch formulations\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel, InfrastructureSystems.FlattenIteratorWrapper{T}, ReservoirLimitFeedforward}} where T<:PowerSystems.Component","page":"Internal API Reference","title":"PowerSimulations.add_feedforward_constraints!","text":"    add_feedforward_constraints(container::PSI.OptimizationContainer,\n                    model::PSI.DeviceModel,\n                    devices,\n                    ff::ReservoirLimitFeedforward)\n\nConstructs a parameterized integral limit constraint to implement feedforward from other models. The Parameters are initialized using the upper boundary values of the provided variables.\n\nsum(variable[var_name, t] for t in 1:affected_periods)/affected_periods <= param_reference[var_name]\n\nLaTeX\n\nsum_t x leq param^max\n\nArguments\n\ncontainer::PowerSimulations.OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::PowerSimulations.DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::ReservoirLimitFeedforward : a instance of the Reservoir Limit Feedforward\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{U}, Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel{T, U}, InfrastructureSystems.FlattenIteratorWrapper{T}, ReservoirTargetFeedforward}} where {T<:PowerSystems.HydroGen, U<:HydroPowerSimulations.AbstractHydroFormulation}","page":"Internal API Reference","title":"PowerSimulations.add_feedforward_constraints!","text":"    add_feedforward_constraints(\n        container::PSI.OptimizationContainer,\n        ::PSI.DeviceModel,\n        devices::IS.FlattenIteratorWrapper{T},\n        ff::ReservoirTargetFeedforward,\n    ) where {T <: PSY.Component}\n\nConstructs a equality constraint to a fix a variable in one model using the variable value from other model results.\n\nvariable[var_name, t] + slack[var_name, t] >= param[var_name, t]\n\nLaTeX\n\nx + slack = param\n\nArguments\n\ncontainer::PSI.OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::PowerSimulations.DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::ReservoirTargetFeedforward : a instance of the ReservoirTarget Feedforward\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroCommitmentReservoirBudget, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentReservoirBudget Formulation with only Active Power.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroCommitmentReservoirBudget, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentReservoirBudget Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroCommitmentRunOfRiver, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentRunOfRiver Formulation with only Active Power.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroCommitmentRunOfRiver, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentRunOfRiver Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroPowerSimulations.AbstractHydroDispatchFormulation, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroDispatchRunOfRiver Formulation with only Active Power.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{D}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, D}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, D<:HydroPowerSimulations.AbstractHydroDispatchFormulation, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroDispatchRunOfRiver Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroCommitmentReservoirStorage}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentReservoirStorage Formulation with only Active Power\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroCommitmentReservoirStorage}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroCommitmentReservoirStorage Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroDispatchPumpedStorage}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroPumpedStorage, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroPumpedStorage with HydroDispatchPumpedStorage Formulation with only Active Power\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroDispatchReservoirBudget}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroDispatchReservoirBudget Formulation with only Active Power.\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroDispatchReservoirBudget}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with ReservoirBudget Dispatch Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroDispatchReservoirStorage}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractActivePowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroDispatchReservoirStorage Formulation with only Active Power\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, HydroDispatchReservoirStorage}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroEnergyReservoir, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen with HydroDispatchReservoirStorage Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.construct_device!-Union{Tuple{S}, Tuple{H}, Tuple{PowerSimulations.OptimizationContainer, PowerSystems.System, InfrastructureSystems.Optimization.ArgumentConstructStage, PowerSimulations.DeviceModel{H, PowerSimulations.FixedOutput}, PowerSimulations.NetworkModel{S}}} where {H<:PowerSystems.HydroGen, S<:PowerModels.AbstractPowerModel}","page":"Internal API Reference","title":"PowerSimulations.construct_device!","text":"Construct model for PowerSystems.HydroGen` with PowerSimulations.FixedOutput Formulation\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.get_min_max_limits-Tuple{PowerSystems.HydroGen, Type{<:PowerSimulations.ActivePowerVariableLimitsConstraint}, Type{<:HydroPowerSimulations.AbstractHydroFormulation}}","page":"Internal API Reference","title":"PowerSimulations.get_min_max_limits","text":"Min and max active Power Variable limits\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.get_min_max_limits-Tuple{PowerSystems.HydroGen, Type{<:PowerSimulations.ActivePowerVariableLimitsConstraint}, Type{<:HydroPowerSimulations.AbstractHydroReservoirFormulation}}","page":"Internal API Reference","title":"PowerSimulations.get_min_max_limits","text":"Min and max active Power Variable limits\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.get_min_max_limits-Tuple{PowerSystems.HydroGen, Type{<:PowerSimulations.InputActivePowerVariableLimitsConstraint}, Type{HydroDispatchPumpedStorage}}","page":"Internal API Reference","title":"PowerSimulations.get_min_max_limits","text":"Min and max input active power variable limits for HydroDispatchPumpedStorage\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.get_min_max_limits-Tuple{PowerSystems.HydroGen, Type{<:PowerSimulations.OutputActivePowerVariableLimitsConstraint}, Type{HydroDispatchPumpedStorage}}","page":"Internal API Reference","title":"PowerSimulations.get_min_max_limits","text":"Min and max output active power variable limits for HydroDispatchPumpedStorage\n\n\n\n\n\n","category":"method"},{"location":"api/internal/#PowerSimulations.get_min_max_limits-Tuple{PowerSystems.HydroGen, Type{<:PowerSimulations.ReactivePowerVariableLimitsConstraint}, Type{<:HydroPowerSimulations.AbstractHydroReservoirFormulation}}","page":"Internal API Reference","title":"PowerSimulations.get_min_max_limits","text":"Min and max reactive Power Variable limits\n\n\n\n\n\n","category":"method"},{"location":"#PowerSystems.jl","page":"Welcome Page","title":"PowerSystems.jl","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = HydroPowerSimulations","category":"page"},{"location":"#Overview","page":"Welcome Page","title":"Overview","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"HydroPowerSimulations.jl is a Julia package that extends PowerSimulations.jl for modeling of hydro generation technology in operational simulations.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"HydroPowerSimulations has been developed as part of the Flexible Linked Analysis of Streamflow and Hydropower (FLASH) and Reliability and Resilience of coordinated water Distribution and power Distribution (R2D2) projects at the U.S. Department of Energy's National Renewable Energy Laboratory (NREL) Software Record SWR-23-110.","category":"page"},{"location":"api/public/#Public-API-Reference","page":"Public API Reference","title":"Public API Reference","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Pages = [\"public.md\"]\nDepth = 2","category":"page"},{"location":"api/public/#Formulations","page":"Public API Reference","title":"Formulations","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"formulations.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.HydroCommitmentReservoirBudget","page":"Public API Reference","title":"HydroPowerSimulations.HydroCommitmentReservoirBudget","text":"Formulation type to add commitment and injection variables constrained by total energy production budget defined with a time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroCommitmentReservoirStorage","page":"Public API Reference","title":"HydroPowerSimulations.HydroCommitmentReservoirStorage","text":"Formulation type to constrain hydropower production with unit commitment variables and a representation of the energy storage capacity and water inflow time series of a reservoir for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroCommitmentRunOfRiver","page":"Public API Reference","title":"HydroPowerSimulations.HydroCommitmentRunOfRiver","text":"Formulation type to add commitment and injection variables constrained by a maximum injection time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroDispatchPumpedStorage","page":"Public API Reference","title":"HydroPowerSimulations.HydroDispatchPumpedStorage","text":"Formulation type to constrain energy production from pumped storage with a representation of the energy storage capacity of upper and lower reservoirs and water inflow time series of upper reservoir and outflow time series of lower reservoir for PowerSystems.HydroPumpedStorage\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroDispatchReservoirBudget","page":"Public API Reference","title":"HydroPowerSimulations.HydroDispatchReservoirBudget","text":"Formulation type to add injection variables constrained by total energy production budget defined with a time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroDispatchReservoirStorage","page":"Public API Reference","title":"HydroPowerSimulations.HydroDispatchReservoirStorage","text":"Formulation type to constrain hydropower production with a representation of the energy storage capacity and water inflow time series of a reservoir for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroDispatchRunOfRiver","page":"Public API Reference","title":"HydroPowerSimulations.HydroDispatchRunOfRiver","text":"Formulation type to add injection variables constrained by a maximum injection time series for PowerSystems.HydroGen\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Variables","page":"Public API Reference","title":"Variables","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"variables.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.HydroEnergyOutput","page":"Public API Reference","title":"HydroPowerSimulations.HydroEnergyOutput","text":"Auxiliary Variable for Hydro Models that solve for total energy output\n\nDocs abbreviation: E^texthyout\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroEnergyShortageVariable","page":"Public API Reference","title":"HydroPowerSimulations.HydroEnergyShortageVariable","text":"Struct to dispatch the creation of a slack variable for energy storage levels < target storage levels\n\nDocs abbreviation: e^textshortage\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroEnergySurplusVariable","page":"Public API Reference","title":"HydroPowerSimulations.HydroEnergySurplusVariable","text":"Struct to dispatch the creation of a slack variable for energy storage levels > target storage levels\n\nDocs abbreviation: e^textsurplus\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroEnergyVariableDown","page":"Public API Reference","title":"HydroPowerSimulations.HydroEnergyVariableDown","text":"Struct to dispatch the creation of a variable for energy storage level (state of charge) of lower reservoir\n\nDocs abbreviation: e^textdn\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.HydroEnergyVariableUp","page":"Public API Reference","title":"HydroPowerSimulations.HydroEnergyVariableUp","text":"Struct to dispatch the creation of a variable for energy storage level (state of charge) of upper reservoir\n\nDocs abbreviation: e^textup\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.WaterSpillageVariable","page":"Public API Reference","title":"HydroPowerSimulations.WaterSpillageVariable","text":"Struct to dispatch the creation of energy (water) spillage variable representing energy released from a storage/reservoir not injected into the network\n\nDocs abbreviation: s\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Parameters","page":"Public API Reference","title":"Parameters","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"parameters.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.EnergyBudgetTimeSeriesParameter","page":"Public API Reference","title":"HydroPowerSimulations.EnergyBudgetTimeSeriesParameter","text":"Parameter to define energy budget time series for hydro generators\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.EnergyTargetTimeSeriesParameter","page":"Public API Reference","title":"HydroPowerSimulations.EnergyTargetTimeSeriesParameter","text":"Parameter to define energy storage target level time series for hydro generators\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.InflowTimeSeriesParameter","page":"Public API Reference","title":"HydroPowerSimulations.InflowTimeSeriesParameter","text":"Parameter to define energy inflow to storage or reservoir time series\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.OutflowTimeSeriesParameter","page":"Public API Reference","title":"HydroPowerSimulations.OutflowTimeSeriesParameter","text":"Parameter to define energy outflow from storage or reservoir time series\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.ReservoirLimitParameter","page":"Public API Reference","title":"HydroPowerSimulations.ReservoirLimitParameter","text":"Parameter to define energy limit for feedforward\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.ReservoirTargetParameter","page":"Public API Reference","title":"HydroPowerSimulations.ReservoirTargetParameter","text":"Parameter to define energy target for feedforward\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Expressions","page":"Public API Reference","title":"Expressions","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"expressions.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.ReserveRangeExpressionLB","page":"Public API Reference","title":"HydroPowerSimulations.ReserveRangeExpressionLB","text":"Expression for PowerSystems.HydroPumpedStorage that keep track of active power and reserves for Lower Bound limits\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.ReserveRangeExpressionUB","page":"Public API Reference","title":"HydroPowerSimulations.ReserveRangeExpressionUB","text":"Expression for PowerSystems.HydroPumpedStorage that keep track of active power and reserves for Upper Bound limits\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Constraints","page":"Public API Reference","title":"Constraints","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [ \"constraints.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.EnergyBudgetConstraint","page":"Public API Reference","title":"HydroPowerSimulations.EnergyBudgetConstraint","text":"Struct to create the constraint that limits the budget for reservoir formulations.\n\nFor more information check HydroPowerSimulations Formulations.\n\nThe specified constraint is formulated as:\n\nsum_t=1^T p^texthy_t le sum_t=1^T textEnergyBudgetTimeSeriesParameter_t\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.EnergyCapacityDownConstraint","page":"Public API Reference","title":"HydroPowerSimulations.EnergyCapacityDownConstraint","text":"Struct to create the constraint that keeps track of the reservoir level of the lower (down) reservoir\n\nFor more information check HydroPowerSimulations Formulations.\n\nThe specified constraint is formulated as:\n\ne_t^textdn = e_t-1^textdn + left (p_t^texthyout + s_t - fracp_t^texthyineta^textpump right) Delta T - textOutflowTimeSeriesParameter_t quad forall t in 1dots T\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.EnergyCapacityUpConstraint","page":"Public API Reference","title":"HydroPowerSimulations.EnergyCapacityUpConstraint","text":"Struct to create the constraint that keeps track of the reservoir level of the upper (up) reservoir\n\nFor more information check HydroPowerSimulations Formulations.\n\nThe specified constraint is formulated as:\n\ne_t^textup = e_t-1^textup + left (p_t^texthyin - fracp_t^texthyout + s_teta^textpump right) Delta T + textInflowTimeSeriesParameter_t quad forall t in 1dots T\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.EnergyTargetConstraint","page":"Public API Reference","title":"HydroPowerSimulations.EnergyTargetConstraint","text":"Struct to create the constraint that set-up the target for reservoir formulations.\n\nFor more information check HydroPowerSimulations Formulations.\n\nThe specified constraint is formulated as:\n\ne_t + e^textshortage + e^textsurplus = textEnergyTargetTimeSeriesParameter_t quad forall t in 1dots T\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Initial-Conditions","page":"Public API Reference","title":"Initial Conditions","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"initial_conditions.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.InitialHydroEnergyLevelDown","page":"Public API Reference","title":"HydroPowerSimulations.InitialHydroEnergyLevelDown","text":"Initial condition for Down reservoir in PowerSystems.HydroPumpedStorage formulations\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.InitialHydroEnergyLevelUp","page":"Public API Reference","title":"HydroPowerSimulations.InitialHydroEnergyLevelUp","text":"Initial condition for Upper reservoir in PowerSystems.HydroPumpedStorage formulations\n\n\n\n\n\n","category":"type"},{"location":"api/public/#Feedforwards","page":"Public API Reference","title":"Feedforwards","text":"","category":"section"},{"location":"api/public/","page":"Public API Reference","title":"Public API Reference","text":"Modules = [HydroPowerSimulations]\nPages   = [\"feedforwards.jl\",\n           ]\nOrder = [:type, :function]\nPublic = true\nPrivate = false","category":"page"},{"location":"api/public/#HydroPowerSimulations.ReservoirLimitFeedforward","page":"Public API Reference","title":"HydroPowerSimulations.ReservoirLimitFeedforward","text":"ReservoirLimitFeedforward(\n    component_type::Type{<:PSY.Component},\n    source::Type{T},\n    affected_values::Vector{DataType},\n    number_of_periods::Int,\n    meta = CONTAINER_KEY_EMPTY_META\n) where {T}\n\nAdds a constraint to limit the sum of a variable over the number of periods to the source value.\n\nArguments:\n\ncomponent_type::Type{<:PowerSystems.Component} : Specify the type of component on which the Feedforward will be applied\nsource::Type{T} : Specify the VariableType, ParameterType or AuxVariableType as the source of values for the Feedforward\naffected_values::Vector{DataType} : Specify the variable on which the reservoir limit will be applied using the source values\nnumber_of_periods::Int : Specify the total number of periods that are added on which the limits are applied. For example, in a 24-step simulation if number_of_periods = 24, it will add only one constraint over the sum of 24 periods on which the reservoir limit will be applied. If number_of_periods = 12, it will create two constraints, one for the first 12 steps and one for the 13:24 steps. It is mandatory that number_of_periods can divide the total number of simulation steps.\n\n\n\n\n\n","category":"type"},{"location":"api/public/#HydroPowerSimulations.ReservoirTargetFeedforward","page":"Public API Reference","title":"HydroPowerSimulations.ReservoirTargetFeedforward","text":"ReservoirTargetFeedforward(\n    component_type::Type{<:PowerSystems.Component},\n    source::Type{T},\n    affected_values::Vector{DataType},\n    target_period::Int,\n    penalty_cost::Float64,\n    meta = CONTAINER_KEY_EMPTY_META\n) where {T}\n\nAdds a constraint to enforce a minimum reservoir level target with a slack variable associated with a penalty term.\n\nArguments:\n\ncomponent_type::Type{<:PowerSystems.Component} : Specify the type of component on which the Feedforward will be applied\nsource::Type{T} : Specify the VariableType, ParameterType or AuxVariableType as the source of values for the Feedforward\naffected_values::Vector{DataType} : Specify the variable on which the reservoir target will be applied using the source values\ntarget_period::Int : Specify the time step at which the reservoir target will be applied.\npenalty_cost::Float64 : Specify the penalty cost for not reaching the desired reservoir target.\n\n\n\n\n\n","category":"type"}]
}
